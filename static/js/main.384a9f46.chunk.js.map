{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","event","this","props","react_default","a","createElement","className","summary","start","dateTime","timeZone","location","variant","concat","onClick","handleClick","href","htmlLink","rel","target","description","Component","EventList","events","map","key","id","src_Event","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","_this","locations","filter","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","_this2","type","onChange","onFocus","style","display","mockData","kind","etag","status","created","updated","extractLocations","Object","toConsumableArray","Set","checkToken","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","accessToken","result","wrap","_context","prev","next","fetch","then","res","json","catch","error","sent","abrupt","stop","_x","apply","arguments","getEvents","_ref2","_callee2","token","url","_context2","NProgress","window","startsWith","done","getAccessToken","removeQuery","axios","get","data","localStorage","setItem","JSON","stringify","getToken","_ref3","_callee3","code","encodeCode","response","_yield$response$json","access_token","_context3","encodeURIComponent","ok","Error","t0","_x2","_ref4","_callee4","tokenCheck","searchParams","results","authUrl","_context4","getItem","removeItem","URLSearchParams","search","history","pushState","pathname","newurl","protocol","host","App","locationEvents","mounted","src_CitySearch","src_EventList","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.384a9f46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    collapsed: true\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n    \n    return (\n      <div className=\"event\">\n        <h1 className=\"summary\">{event.summary}</h1>\n        <p className=\"start-date\">\n          {event.start.dateTime} ({event.start.timeZone})\n        </p>\n        <p className=\"location\">\n          @{event.summary} | {event.location}\n        </p>\n        <button\n          variant=\"outline-info\"\n          className={`details-button ${collapsed ? \"show\" : \"hide\"}-details`}\n          onClick={this.handleClick}\n        >\n          {collapsed ? \"Show Details\" : \"Hide Details\"}\n        </button>\n        {!collapsed && (\n          <div\n            className={`extra-details ${\n              this.state.collapsed ? \"hide\" : \"show\"\n            }`}\n          >\n            <h3>About the event:</h3>\n            <a href={event.htmlLink} rel=\"noreferrer\" target=\"_blank\">\n              See details on Google Calendar\n            </a>\n            <p className=\"event-description\">{event.description}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n          <ul className=\"EventList\">\n            {events.map(event =>\n              <li key={event.id}>\n                <Event event={event} />\n              </li>\n            )}\n          </ul>\n        );\n      }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n          return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n          query: value,\n          suggestions,\n        });\n      };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li \n                            key={suggestion}\n                            onClick={() => \n                        this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\n                        <b>See all cities</b>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","const mockData = [\n  {\n      kind: \"calendar#event\",\n      etag: \"\\\"3181161784712000\\\"\",\n      id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n      status: \"confirmed\",\n      htmlLink: \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      created: \"2020-05-19T19:17:46.000Z\",\n      updated: \"2020-05-27T12:01:32.356Z\",\n      summary: \"Learn JavaScript\",\n      description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n      location: \"London, UK\",\n      start: {\n        dateTime:\"2020-05-19T16:00:00+02:00\",\n        timeZone:\"Europe/Berlin\"\n      }\n    }, \n    {\n        kind: \"calendar#event\",\n        etag: \"\\\"3181159875584000\\\"\",\n        id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        status: \"confirmed\",\n        htmlLink: \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        created: \"2020-05-19T19:14:30.000Z\",\n        updated: \"2020-05-27T11:45:37.792Z\",\n        summary: \"React is Fun\",\n        description: \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        location: \"Berlin, Germany\",\n        start: {\n          dateTime: \"2020-05-20T14:00:00+02:00\",\n          timeZone: \"Europe/Berlin\"\n        }\n    }\n];\n\nexport { mockData };","import { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nimport './nprogress.css';\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\nreturn locations;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = 'https://8t7d8nfdoi.execute-api.us-east-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst getToken = async (code) => {\n  try {\n      const encodeCode = encodeURIComponent(code);\n\n      const response = await fetch( 'https://8t7d8nfdoi.execute-api.us-east-1.amazonaws.com/dev/api/token' + '/' + encodeCode);\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`)\n      }\n      const { access_token } = await response.json();\n      access_token && localStorage.setItem(\"access_token\", access_token);\n      return access_token;\n  } catch(error) {\n      error.json();\n  }\n}\n\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://8t7d8nfdoi.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};","import React, { Component } from 'react';\nimport './App.css';\nimport './nprogress.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n// React 17\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// React 18\n// const rootElement = document.getElementById(\"root\");\n// const root = createRoot(rootElement);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}